// automatically generated by the FlatBuffers compiler, do not modify

package ppx;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Beta extends Table {
  public static Beta getRootAsBeta(ByteBuffer _bb) { return getRootAsBeta(_bb, new Beta()); }
  public static Beta getRootAsBeta(ByteBuffer _bb, Beta obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Beta __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Tensor concentration0() { return concentration0(new Tensor()); }
  public Tensor concentration0(Tensor obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public Tensor concentration1() { return concentration1(new Tensor()); }
  public Tensor concentration1(Tensor obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createBeta(FlatBufferBuilder builder,
      int concentration0Offset,
      int concentration1Offset) {
    builder.startObject(2);
    Beta.addConcentration1(builder, concentration1Offset);
    Beta.addConcentration0(builder, concentration0Offset);
    return Beta.endBeta(builder);
  }

  public static void startBeta(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addConcentration0(FlatBufferBuilder builder, int concentration0Offset) { builder.addOffset(0, concentration0Offset, 0); }
  public static void addConcentration1(FlatBufferBuilder builder, int concentration1Offset) { builder.addOffset(1, concentration1Offset, 0); }
  public static int endBeta(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

